p33 <- p3 + facet_wrap(~nodeCnt)
#for paper! ----------------------------------------#
pdf(file="ScatterPlotSmoothCurve2.pdf",width=8,height=8)     #
grid.arrange(p1,p11,p2,p22,p3,p33,ncol=2)              # <------------------------------------------------------------------------< save pdf images
dev.off()                                           #
#for paper! ----------------------------------------#
p1 <- qplot(noV, PSODSSPGap, data = mydata,geom = c("point", "smooth"))+ theme_bw() +
labs(y = "PSO vs DSSP Gap(%)", x =  "Number of Variables")
p11 <- p1 + facet_wrap(~nodeCnt)
#for paper! ----------------------------------------#
pdf(file="ScatterPlotSmoothCurve2.pdf",width=8,height=8)     #
grid.arrange(p11)              # <------------------------------------------------------------------------< save pdf images
dev.off()                                           #
#for paper! ----------------------------------------#
p1 <- qplot(noV, PSODSSPGap, data = mydata,geom = c("point", "smooth"))+ theme_bw() +
labs(y = "PSO vs DSSP Gap(%)", x =  "Number of Variables")
p11 <- p1 + facet_wrap(~nodeCnt)
#for paper! ----------------------------------------#
pdf(file="ScatterPlotSmoothCurve3.pdf",width=8,height=8)     #
grid.arrange(p11)              # <------------------------------------------------------------------------< save pdf images
dev.off()                                           #
#for paper! ----------------------------------------#
p1 <- qplot(averagesupply, PSODSSPGap, data = mydata,geom = c("point", "smooth"))+ theme_bw() +
labs(y = "PSO vs DSSP Gap(%)", x = "Average Supply")
p11 <- p1 + facet_wrap(~nodeCnt)
p2 <- qplot(avgFC, PSODSSPGap, data = mydata,geom = c("point", "smooth"))+ theme_bw() +
labs(y = "PSO vs DSSP Gap(%)", x = "Fixed to Variable Cost Ratio")
p22 <- p2 + facet_wrap(~nodeCnt)
p3 <- qplot(gamma, PSODSSPGap, data = mydata,geom = c("point", "smooth"))+ theme_bw() +
labs(y = "PSO vs DSSP Gap(%)", x =  expression(paste(gamma," Characteristic")))
p33 <- p3 + facet_wrap(~nodeCnt)
#for paper! ----------------------------------------#
pdf(file="ScatterPlotSmoothCurve2.pdf",width=8,height=8)     #
grid.arrange(p1,p11,p2,p22,p3,p33,ncol=2)              # <------------------------------------------------------------------------< save pdf images
dev.off()                                           #
p1 <- qplot(noV, PSODSSPGap, data = mydata,geom = c("point", "smooth"))+ theme_bw() +
labs(y = "PSO vs DSSP Gap(%)", x =  "Number of Variables")
p11 <- p1 + facet_wrap(~nodeCnt)
#for paper! ----------------------------------------#
pdf(file="ScatterPlotSmoothCurve3.pdf",width=8,height=6)     #
grid.arrange(p11)              # <------------------------------------------------------------------------< save pdf images
dev.off()                                           #
#for paper! ----------------------------------------#
?cor.test
cor.test(mydata$density,mydata$PSOpsi,method="spearm")
cor.test(mydata$psupplynodes,mydata$PSOpsi,method="spearm")
cor.test(mydata$demandnodes,mydata$PSOpsi,method="spearm")
cor.test(mydata$averagesupply,mydata$PSOpsi,method="spearm")
cor.test(mydata$avgFC,mydata$PSOpsi,method="spearm")
cor.test(mydata$gamma,mydata$PSOpsi,method="spearm")
cor.test(mydata$PSODSSPGap,mydata$PSOpsi,method="spearm")
cor.test(mydata$nodeCnt,mydata$PSOpsi,method="spearm")
cor.test(mydata$density,mydata$PSODSSPGap,method="spearm")
cor.test(mydata$psupplynodes,mydata$PSODSSPGap,method="spearm")
cor.test(mydata$demandnodes,mydata$PSODSSPGap,method="spearm")
cor.test(mydata$averagesupply,mydata$PSODSSPGap,method="spearm")
cor.test(mydata$avgFC,mydata$PSODSSPGap,method="spearm")
cor.test(mydata$gamma,mydata$PSODSSPGap,method="spearm")
cor.test(mydata$PSODSSPGap,mydata$PSODSSPGap,method="spearm")
library(MASS)
data(menarche)
plot(Menarche/Total ~ Age, data=menarche)
View(menarche)
lines(menarche$Age, glm.out$fitted, type="l", col="red")
glm.out = glm(cbind(Menarche, Total-Menarche) ~ Age,family=binomial(logit), data=menarche)
lines(menarche$Age, glm.out$fitted, type="l", col="red")
plot(Menarche ~ Age, data=menarche)
glm(PSObeatDSSP ~ density, family=binomial(logit), data=mydata)
glm(PSObeatDSSP ~ density*psupplynodes, family=binomial(logit), data=mydata)
?glm
glm(formula = PSObeatDSSP ~ density, family = binomial,data=mydata)
glm.out <- glm(PSObeatDSSP ~ density*psupplynodes, family=binomial(logit), data=mydata)
summary(glm.out)
glm.out$fitted
plot(PSObeatDSSP~density,data = mydata)
glm.out <- glm(PSObeatDSSP ~ density, family=binomial(logit), data=mydata)
summary(glm.out)
plot(PSObeatDSSP~density,data = mydata)
lines(mydata$density, glm.out$fitted, type="l", col="red")
glm.out <- glm(PSObeatDSSP ~ nodeCnt, family=binomial(logit), data=mydata)
summary(glm.out)
plot(PSObeatDSSP~density,data = mydata)
lines(mydata$density, glm.out$fitted, type="l", col="red")
?hist
hist(mydata$PSObeatDSSP)
p11 <- p1+facet_wrap(~nodeCnt)
p1 <- hist(mydata$PSObeatDSSP)
p11 <-
p1+facet_wrap(~nodeCnt)
ggplot(data=mydata,aes(x=PSObeatDSSP)) + geom_histogram(binwidth=0.5, color="black", fill = "light blue", size=.1) +
theme_bw() +
labs(y = "Observations",
x = "PSO overperform DSSP") +
scale_y_continuous(labels = comma,limits=c(0,200)) +
theme(axis.ticks = element_blank(),
# axis.text.y = element_blank(),
panel.border = element_blank(),
axis.text = element_text(size = 10),
axis.title.x = element_text(vjust=0.01),
axis.title.y = element_text(vjust=0.2))
ggplot(data=mydata,aes(x=PSObeatDSSP)) + geom_histogram(binwidth=0.01, color="black", fill = "light blue", size=.1) +
theme_bw() +
labs(y = "Observations",
x = "PSO overperform DSSP") +
scale_y_continuous(labels = comma,limits=c(0,200)) +
theme(axis.ticks = element_blank(),
# axis.text.y = element_blank(),
panel.border = element_blank(),
axis.text = element_text(size = 10),
axis.title.x = element_text(vjust=0.01),
axis.title.y = element_text(vjust=0.2))
ggplot(data=mydata,aes(x=PSObeatDSSP)) + geom_histogram(binwidth=0.5, color="black", fill = "light blue", size=.1) +
theme_bw() +
labs(y = "Observations",
x = "PSO overperform DSSP") +
scale_y_continuous(labels = comma,limits=c(0,200)) +
theme(axis.ticks = element_blank(),
# axis.text.y = element_blank(),
panel.border = element_blank(),
axis.text = element_text(size = 10),
axis.title.x = element_text(vjust=0.01),
axis.title.y = element_text(vjust=0.2))
ggplot(data=mydata,aes(x=PSObeatDSSP)) + geom_histogram(binwidth=0.5, color="black", fill = "light blue", size=.1) +
theme_bw() +
labs(y = "Observations",
x = "PSO overperform DSSP") +
scale_y_continuous(labels = comma,limits=c(0,200)) +
scale_x_continuous(labels = comma,limits=c(0,1)) +
theme(axis.ticks = element_blank(),
# axis.text.y = element_blank(),
panel.border = element_blank(),
axis.text = element_text(size = 10),
axis.title.x = element_text(vjust=0.01),
axis.title.y = element_text(vjust=0.2))
ggplot(data=mydata,aes(x=PSObeatDSSP)) + geom_histogram(binwidth=0.1, color="black", fill = "light blue", size=.1) +
theme_bw() +
labs(y = "Observations",
x = "PSO overperform DSSP") +
scale_y_continuous(labels = comma,limits=c(0,200)) +
scale_x_continuous(labels = comma,limits=c(0,1.1)) +
theme(axis.ticks = element_blank(),
# axis.text.y = element_blank(),
panel.border = element_blank(),
axis.text = element_text(size = 10),
axis.title.x = element_text(vjust=0.01),
axis.title.y = element_text(vjust=0.2))
ggplot(data=mydata,aes(x=PSObeatDSSP)) + geom_histogram(binwidth=0.1, color="black", fill = "light blue", size=.1) +
theme_bw() +
labs(y = "Observations",
x = "PSO overperform DSSP") +
scale_y_continuous(labels = comma,limits=c(0,200)) +
scale_x_continuous(labels = comma,limits=c(0,1.1)) +
+ facet_wrap(~nodeCnt)
theme(axis.ticks = element_blank(),
# axis.text.y = element_blank(),
panel.border = element_blank(),
axis.text = element_text(size = 10),
axis.title.x = element_text(vjust=0.01),
axis.title.y = element_text(vjust=0.2))
p1 <- ggplot(data=mydata,aes(x=PSObeatDSSP)) + geom_histogram(binwidth=0.1, color="black", fill = "light blue", size=.1) +
theme_bw() +
labs(y = "Observations",
x = "PSO overperform DSSP") +
scale_y_continuous(labels = comma,limits=c(0,200)) +
scale_x_continuous(labels = comma,limits=c(0,1.1)) +
theme(axis.ticks = element_blank(),
# axis.text.y = element_blank(),
panel.border = element_blank(),
axis.text = element_text(size = 10),
axis.title.x = element_text(vjust=0.01),
axis.title.y = element_text(vjust=0.2))
p1+ facet_wrap(~nodeCnt)
p1+ facet_wrap(~nodeCnt)
p1 <- ggplot(data=mydata,aes(x=PSObeatDSSP)) + geom_histogram(binwidth=0.1, color="black", fill = "light blue", size=.1) +
theme_bw() +
labs(y = "Observations",
x = "PSO overperform DSSP") +
scale_y_continuous(labels = comma,limits=c(0,70)) +
scale_x_continuous(labels = comma,limits=c(0,1.1)) +
theme(axis.ticks = element_blank(),
# axis.text.y = element_blank(),
panel.border = element_blank(),
axis.text = element_text(size = 10),
axis.title.x = element_text(vjust=0.01),
axis.title.y = element_text(vjust=0.2))
p1+ facet_wrap(~nodeCnt)
p11 <- p1+ facet_wrap(~nodeCnt)
#for paper! ----------------------------------------#
pdf(file="HistofPSObeatDSSP.pdf",width=8,height=6)     #
grid.arrange(p11)              # <------------------------------------------------------------------------< save pdf images
dev.off()                                           #
#for paper! ----------------------------------------#
ggplot(data=mydata,aes(x=PSObeatDSSP)) + geom_histogram(binwidth=0.01, color="black", fill = "light blue", size=.1) +
theme_bw() +
labs(y = "Observations",
x = "PSO overperform DSSP") +
scale_y_continuous(labels = comma,limits=c(0,70)) +
scale_x_continuous(labels = comma,limits=c(0,1.1)) +
theme(axis.ticks = element_blank(),
# axis.text.y = element_blank(),
panel.border = element_blank(),
axis.text = element_text(size = 10),
axis.title.x = element_text(vjust=0.01),
axis.title.y = element_text(vjust=0.2))
ggplot(data=mydata,aes(x=PSObeatDSSP)) + geom_histogram(binwidth=0.01, color="black", fill = "light blue", size=.1) +
theme_bw() +
labs(y = "Observations",
x = "PSO overperform DSSP") +
scale_y_continuous(labels = comma,limits=c(0,70)) +
scale_x_continuous(labels = comma,limits=c(0,1)) +
theme(axis.ticks = element_blank(),
# axis.text.y = element_blank(),
panel.border = element_blank(),
axis.text = element_text(size = 10),
axis.title.x = element_text(vjust=0.01),
axis.title.y = element_text(vjust=0.2))
ggplot(data=mydata,aes(x=PSObeatDSSP)) + geom_histogram(binwidth=0.1, color="black", fill = "light blue", size=.1) +
theme_bw() +
labs(y = "Observations",
x = "PSO overperform DSSP") +
scale_y_continuous(labels = comma,limits=c(0,70)) +
scale_x_continuous(labels = comma,limits=c(0,1)) +
theme(axis.ticks = element_blank(),
# axis.text.y = element_blank(),
panel.border = element_blank(),
axis.text = element_text(size = 10),
axis.title.x = element_text(vjust=0.01),
axis.title.y = element_text(vjust=0.2))
ggplot(data=mydata,aes(x=PSObeatDSSP)) + geom_histogram(binwidth=0.1, color="black", fill = "light blue", size=.01) +
theme_bw() +
labs(y = "Observations",
x = "PSO overperform DSSP") +
scale_y_continuous(labels = comma,limits=c(0,70)) +
scale_x_continuous(labels = comma,limits=c(0,1)) +
theme(axis.ticks = element_blank(),
# axis.text.y = element_blank(),
panel.border = element_blank(),
axis.text = element_text(size = 10),
axis.title.x = element_text(vjust=0.01),
axis.title.y = element_text(vjust=0.2))
ggplot(data=mydata,aes(x=PSObeatDSSP)) + geom_histogram(binwidth=0.01, color="black", fill = "light blue", size=.01) +
theme_bw() +
labs(y = "Observations",
x = "PSO overperform DSSP") +
scale_y_continuous(labels = comma,limits=c(0,70)) +
scale_x_continuous(labels = comma,limits=c(0,1)) +
theme(axis.ticks = element_blank(),
# axis.text.y = element_blank(),
panel.border = element_blank(),
axis.text = element_text(size = 10),
axis.title.x = element_text(vjust=0.01),
axis.title.y = element_text(vjust=0.2))
ggplot(data=mydata,aes(x=PSObeatDSSP)) + geom_histogram(binwidth=0.01, color="black", fill = "light blue", size=.01) +
theme_bw() +
labs(y = "Observations",
x = "PSO overperform DSSP") +
scale_y_continuous(labels = comma,limits=c(0,70)) +
scale_x_continuous(labels = comma,limits=c(0,1.5)) +
theme(axis.ticks = element_blank(),
# axis.text.y = element_blank(),
panel.border = element_blank(),
axis.text = element_text(size = 10),
axis.title.x = element_text(vjust=0.01),
axis.title.y = element_text(vjust=0.2))
ggplot(data=mydata,aes(x=PSObeatDSSP)) + geom_histogram(binwidth=0.01, color="black", fill = "light blue", size=.1) +
theme_bw() +
labs(y = "Observations",
x = "PSO overperform DSSP") +
scale_y_continuous(labels = comma,limits=c(0,70)) +
scale_x_continuous(labels = comma,limits=c(0,1.5)) +
theme(axis.ticks = element_blank(),
# axis.text.y = element_blank(),
panel.border = element_blank(),
axis.text = element_text(size = 10),
axis.title.x = element_text(vjust=0.01),
axis.title.y = element_text(vjust=0.2))
ggplot(data=mydata,aes(x=PSObeatDSSP)) + geom_histogram(binwidth=0.01, color="black", fill = "light blue", size=.01) +
theme_bw() +
labs(y = "Observations",
x = "PSO overperform DSSP") +
scale_y_continuous(labels = comma,limits=c(0,70)) +
scale_x_continuous(labels = comma,limits=c(0,1)) +
theme(axis.ticks = element_blank(),
# axis.text.y = element_blank(),
panel.border = element_blank(),
axis.text = element_text(size = 10),
axis.title.x = element_text(vjust=0.01),
axis.title.y = element_text(vjust=0.2))
ggplot(data=mydata,aes(x=PSObeatDSSP)) + geom_histogram(binwidth=0.1, color="black", fill = "light blue", size=.1) +
theme_bw() +
labs(y = "Observations",
x = "PSO overperform DSSP") +
scale_y_continuous(labels = comma,limits=c(0,70)) +
scale_x_continuous(labels = comma,limits=c(0,1)) +
theme(axis.ticks = element_blank(),
# axis.text.y = element_blank(),
panel.border = element_blank(),
axis.text = element_text(size = 10),
axis.title.x = element_text(vjust=0.01),
axis.title.y = element_text(vjust=0.2))
ggplot(data=mydata,aes(x=PSObeatDSSP)) + geom_histogram(binwidth=0.1, color="black", fill = "light blue", size=.1) +
theme_bw() +
labs(y = "Observations",
x = "PSO overperform DSSP") +
scale_y_continuous(labels = comma,limits=c(0,70)) +
scale_x_continuous(labels = comma,limits=c(0,1.5)) +
theme(axis.ticks = element_blank(),
# axis.text.y = element_blank(),
panel.border = element_blank(),
axis.text = element_text(size = 10),
axis.title.x = element_text(vjust=0.01),
axis.title.y = element_text(vjust=0.2))
ggplot(data=mydata,aes(x=PSObeatDSSP)) + geom_histogram(binwidth=0.1, color="black", fill = "light blue", size=.1) +
theme_bw() +
labs(y = "Observations",
x = "PSO overperform DSSP") +
scale_y_continuous(labels = comma,limits=c(0,200)) +
scale_x_continuous(labels = comma,limits=c(0,1.5)) +
theme(axis.ticks = element_blank(),
# axis.text.y = element_blank(),
panel.border = element_blank(),
axis.text = element_text(size = 10),
axis.title.x = element_text(vjust=0.01),
axis.title.y = element_text(vjust=0.2))
ggplot(data=mydata,aes(x=PSObeatDSSP)) + geom_histogram(binwidth=0.1, color="black", fill = "light blue", size=.1) +
theme_bw() +
labs(y = "Observations",
x = "PSO overperform DSSP") +
scale_y_continuous(labels = comma,limits=c(0,200)) +
scale_x_continuous(labels = comma,limits=c(0,1)) +
theme(axis.ticks = element_blank(),
# axis.text.y = element_blank(),
panel.border = element_blank(),
axis.text = element_text(size = 10),
axis.title.x = element_text(vjust=0.01),
axis.title.y = element_text(vjust=0.2))
ggplot(data=mydata,aes(x=PSObeatDSSP)) + geom_histogram(binwidth=0.01, color="black", fill = "light blue", size=.01) +
theme_bw() +
labs(y = "Observations",
x = "PSO overperform DSSP") +
scale_y_continuous(labels = comma,limits=c(0,200)) +
scale_x_continuous(labels = comma,limits=c(0,1)) +
theme(axis.ticks = element_blank(),
# axis.text.y = element_blank(),
panel.border = element_blank(),
axis.text = element_text(size = 10),
axis.title.x = element_text(vjust=0.01),
axis.title.y = element_text(vjust=0.2))
ggplot(data=mydata,aes(x=PSObeatDSSP)) + geom_histogram(binwidth=0.01, color="black", fill = "light blue", size=.01) +
theme_bw() +
labs(y = "Observations",
x = "PSO overperform DSSP") +
scale_y_continuous(labels = comma,limits=c(0,200)) +
scale_x_continuous(labels = comma,limits=c(0,1.2)) +
theme(axis.ticks = element_blank(),
# axis.text.y = element_blank(),
panel.border = element_blank(),
axis.text = element_text(size = 10),
axis.title.x = element_text(vjust=0.01),
axis.title.y = element_text(vjust=0.2))
ggplot(data=mydata,aes(x=PSObeatDSSP)) + geom_histogram(binwidth=0.01, color="black", fill = "light blue", size=.1) +
theme_bw() +
labs(y = "Observations",
x = "PSO overperform DSSP") +
scale_y_continuous(labels = comma,limits=c(0,200)) +
scale_x_continuous(labels = comma,limits=c(0,1.2)) +
theme(axis.ticks = element_blank(),
# axis.text.y = element_blank(),
panel.border = element_blank(),
axis.text = element_text(size = 10),
axis.title.x = element_text(vjust=0.01),
axis.title.y = element_text(vjust=0.2))
ggplot(data=mydata,aes(x=PSObeatDSSP)) + geom_histogram(binwidth=0.1, color="black", fill = "light blue", size=.1) +
theme_bw() +
labs(y = "Observations",
x = "PSO overperform DSSP") +
scale_y_continuous(labels = comma,limits=c(0,200)) +
scale_x_continuous(labels = comma,limits=c(0,1)) +
theme(axis.ticks = element_blank(),
# axis.text.y = element_blank(),
panel.border = element_blank(),
axis.text = element_text(size = 10),
axis.title.x = element_text(vjust=0.01),
axis.title.y = element_text(vjust=0.2))
ggplot(data=mydata,aes(x=PSObeatDSSP)) + geom_histogram(binwidth=0.1, color="black", fill = "light blue", size=.1) +
theme_bw() +
labs(y = "Observations",
x = "PSO overperform DSSP") +
scale_y_continuous(labels = comma,limits=c(0,200)) +
scale_x_continuous(labels = comma,limits=c(0,1.25)) +
theme(axis.ticks = element_blank(),
# axis.text.y = element_blank(),
panel.border = element_blank(),
axis.text = element_text(size = 10),
axis.title.x = element_text(vjust=0.01),
axis.title.y = element_text(vjust=0.2))
p1 <- ggplot(data=mydata,aes(x=PSObeatDSSP)) + geom_histogram(binwidth=0.1, color="black", fill = "light blue", size=.1) +
theme_bw() +
labs(y = "Observations",
x = "PSO overperform DSSP") +
scale_y_continuous(labels = comma,limits=c(0,200)) +
scale_x_continuous(labels = comma,limits=c(0,1.25)) +
theme(axis.ticks = element_blank(),
# axis.text.y = element_blank(),
panel.border = element_blank(),
axis.text = element_text(size = 10),
axis.title.x = element_text(vjust=0.01),
axis.title.y = element_text(vjust=0.2))
p1+ facet_wrap(~nodeCnt)
glm.out <- glm(PSObeatDSSP ~ nodeCnt*density*noV*avgFC*psupplynodes*pdemandnodes*averagesupply*gamma, family=binomial(logit), data=mydata)
summary(glm.out)
sink("logistic regression.txt")
glm.out <- glm(PSObeatDSSP ~ nodeCnt*density*noV*avgFC*psupplynodes*pdemandnodes*averagesupply*gamma, family=binomial(logit), data=mydata)
summary(glm.out)
sink()
?subset
mydata1 <- subset(data=mydata,nodeCnt==25)
mydata1 <- subset(data=mydata,nodeCnt==25)
mydata1 <- subset(mydata,nodeCnt==25)
mydata1
mydata[nodeCnt25,]
mydata[nodeCnt==25,]
sink("logistic regression nodeCnt=25.txt")
mydata1 <- mydata[nodeCnt==25,]
glm.out <- glm(PSObeatDSSP ~ density*noV*avgFC*psupplynodes*pdemandnodes*averagesupply*gamma, family=binomial(logit), data=mydata1)
summary(glm.out)
sink()
glm.out <- glm(PSObeatDSSP ~ nodeCnt, family=binomial(logit), data=mydata)
summary(glm.out)
glm.out <- glm(PSObeatDSSP ~ nodeCnt*density*noV, family=binomial(logit), data=mydata)
summary(glm.out)
glm.out <- glm(PSObeatDSSP ~ nodeCnt*density*noV*avgFC*psupplynodes*pdemandnodes, family=binomial(logit), data=mydata)
summary(glm.out)
sink("logistic regression with nodeCnt.txt")
glm.out <- glm(PSObeatDSSP ~ nodeCnt, family=binomial(logit), data=mydata)
summary(glm.out)
sink()
sink("logistic regression with all variables.txt")
glm.out <- glm(PSObeatDSSP ~ nodeCnt*density*noV*avgFC*psupplynodes*pdemandnodes*averagesupply*gamma, family=binomial(logit), data=mydata)
summary(glm.out)
sink()
sink("logistic regression nodeCnt=25.txt")
mydata1 <- mydata[nodeCnt==25,]
glm.out <- glm(PSObeatDSSP ~ density*noV*avgFC*psupplynodes*pdemandnodes*averagesupply*gamma, family=binomial(logit), data=mydata1)
summary(glm.out)
sink()
summary(glm.out)
glm.out <- glm(PSObeatDSSP ~ nodeCnt+density, family=binomial(logit), data=mydata)
summary(glm.out)
glm.out <- glm(PSObeatDSSP ~ nodeCnt+density+noV+avgFC+psupplynodes+pdemandnodes+averagesupply+gamma, family=binomial(logit), data=mydata)
summary(glm.out)
sink("logistic regression with single variable.txt")
glm.out <- glm(PSObeatDSSP ~ nodeCnt+density+noV+avgFC+psupplynodes+pdemandnodes+averagesupply+gamma, family=binomial(logit), data=mydata)
summary(glm.out)
sink()
glm.out <- glm(PSObeatDSSP ~ nodeCnt, family=binomial(logit), data=mydata)
summary(glm.out)
#logistic regression model analyze the possibility of PSO overperfom DSSP---------------
sink("logistic regression with nodeCnt.txt")
glm.out <- glm(PSObeatDSSP ~ nodeCnt, family=binomial(logit), data=mydata)
summary(glm.out)
sink()
sink("logistic regression with single variable.txt")
glm.out <- glm(PSObeatDSSP ~ nodeCnt+density+noV+avgFC+psupplynodes+pdemandnodes+averagesupply+gamma, family=binomial(logit), data=mydata)
summary(glm.out)
sink()
sink("logistic regression with all variables.txt")
glm.out <- glm(PSObeatDSSP ~ nodeCnt*density*noV*avgFC*psupplynodes*pdemandnodes*averagesupply*gamma, family=binomial(logit), data=mydata)
summary(glm.out)
sink()
sink("logistic regression nodeCnt=25.txt")
mydata1 <- mydata[nodeCnt==25,]
glm.out <- glm(PSObeatDSSP ~ density*noV*avgFC*psupplynodes*pdemandnodes*averagesupply*gamma, family=binomial(logit), data=mydata1)
summary(glm.out)
sink()
sink("logistic regression nodeCnt=50.txt")
mydata1 <- mydata[nodeCnt==50,]
glm.out <- glm(PSObeatDSSP ~ density*noV*avgFC*psupplynodes*pdemandnodes*averagesupply*gamma, family=binomial(logit), data=mydata1)
summary(glm.out)
sink()
sink("logistic regression nodeCnt=100.txt")
mydata1 <- mydata[nodeCnt==100,]
glm.out <- glm(PSObeatDSSP ~ density*noV*avgFC*psupplynodes*pdemandnodes*averagesupply*gamma, family=binomial(logit), data=mydata1)
summary(glm.out)
sink()
sink("logistic regression with all variables.txt")
glm.out <- glm(PSObeatDSSP ~ nodeCnt+density+noV+avgFC+psupplynodes+pdemandnodes+averagesupply+gamma, family=binomial(logit), data=mydata)
summary(glm.out)
glm.out <- glm(PSObeatDSSP ~ nodeCnt*density*noV*avgFC*psupplynodes*pdemandnodes*averagesupply*gamma, family=binomial(logit), data=mydata)
summary(glm.out)
sink()
sink("logistic regression nodeCnt=25.txt")
mydata1 <- mydata[nodeCnt==25,]
glm.out <- glm(PSObeatDSSP ~ density+noV+avgFC+psupplynodes+pdemandnodes+averagesupply+gamma, family=binomial(logit), data=mydata)
summary(glm.out)
glm.out <- glm(PSObeatDSSP ~ density*noV*avgFC*psupplynodes*pdemandnodes*averagesupply*gamma, family=binomial(logit), data=mydata1)
summary(glm.out)
sink()
sink("logistic regression nodeCnt=50.txt")
mydata1 <- mydata[nodeCnt==50,]
glm.out <- glm(PSObeatDSSP ~ density+noV+avgFC+psupplynodes+pdemandnodes+averagesupply+gamma, family=binomial(logit), data=mydata)
summary(glm.out)
glm.out <- glm(PSObeatDSSP ~ density*noV*avgFC*psupplynodes*pdemandnodes*averagesupply*gamma, family=binomial(logit), data=mydata1)
summary(glm.out)
sink()
sink("logistic regression nodeCnt=100.txt")
mydata1 <- mydata[nodeCnt==100,]
glm.out <- glm(PSObeatDSSP ~ density+noV+avgFC+psupplynodes+pdemandnodes+averagesupply+gamma, family=binomial(logit), data=mydata)
summary(glm.out)
glm.out <- glm(PSObeatDSSP ~ density*noV*avgFC*psupplynodes*pdemandnodes*averagesupply*gamma, family=binomial(logit), data=mydata1)
summary(glm.out)
sink()
